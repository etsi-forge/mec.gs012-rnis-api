/*
  ETSI GS MEC 012 - Radio Network Information API
 
  The ETSI MEC ISG MEC012 Radio Network Information API described using OpenAPI.
 
  The version of the OpenAPI document: 2.1.1
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package mec012;

import "google/protobuf/empty.proto";
import public "models/inline_subscription.proto";
import public "models/l2_meas.proto";
import public "models/plmn_info.proto";
import public "models/problem_details.proto";
import public "models/rab_info.proto";
import public "models/s1_bearer_info.proto";
import public "models/subscription_link_list.proto";

service RniService {
  rpc Layer2MeasInfoGET (Layer2MeasInfoGETRequest) returns (L2Meas);

  rpc PlmnInfoGET (PlmnInfoGETRequest) returns (PlmnInfoGETResponse);

  rpc RabInfoGET (RabInfoGETRequest) returns (RabInfo);

  rpc S1BearerInfoGET (S1BearerInfoGETRequest) returns (S1BearerInfo);

  rpc SubscriptionLinkListSubscriptionsGET (SubscriptionLinkListSubscriptionsGETRequest) returns (SubscriptionLinkList);

  rpc SubscriptionsDELETE (SubscriptionsDELETERequest) returns (google.protobuf.Empty);

  rpc SubscriptionsGET (SubscriptionsGETRequest) returns (InlineSubscription);

  rpc SubscriptionsPOST (SubscriptionsPOSTRequest) returns (InlineSubscription);

  rpc SubscriptionsPUT (SubscriptionsPUTRequest) returns (InlineSubscription);

}

message Layer2MeasInfoGETRequest {
  // Application instance identifier
  string appInsId = 1;
  // Comma separated list of E-UTRAN Cell Identities
  repeated string cellId = 2;
  // Comma separated list of IE IPv4 addresses as defined for the type for AssociateId
  repeated string ueIpv4Address = 3;
  // Comma separated list of IE IPv6 addresses as defined for the type for AssociateId
  repeated string ueIpv6Address = 4;
  // Comma separated list of IE NATed IP addresses as defined for the type for AssociateId
  repeated string natedIpAddress = 5;
  // Comma separated list of GTP TEID addresses as defined for the type for AssociateId
  repeated string gtpTeid = 6;
  // PRB usage for downlink GBR traffic in percentage as defined in ETSI TS 136 314
  int32 dlGbrPrbUsageCell = 7;
  // PRB usage for uplink GBR traffic in percentage as defined in ETSI TS 136 314
  int32 ulGbrPrbUsageCell = 8;
  // PRB usage for downlink non-GBR traffic in percentage as defined in ETSI TS 136 314
  int32 dlNongbrPrbUsageCell = 9;
  // PRB usage for uplink non-GBR traffic in percentage as defined in ETSI TS 136 314
  int32 ulNongbrPrbUsageCell = 10;
  // PRB usage for total downlink traffic in percentage as defined in ETSI TS 136 314
  int32 dlTotalPrbUsageCell = 11;
  // PRB usage for total uplink traffic in percentage as defined in ETSI TS 136 314
  int32 ulTotalPrbUsageCell = 12;
  // Received dedicated preambles in percentage as defined in ETSI TS 136 314
  int32 receivedDedicatedPreamblesCell = 13;
  // Received randomly selected preambles in the low range in percentage as defined in ETSI TS 136 314
  int32 receivedRandomlySelectedPreamblesLowRangeCell = 14;
  // Received rendomly selected preambles in the high range in percentage as defined in ETSI TS 136 314
  int32 receivedRandomlySelectedPreamblesHighRangeCell = 15;
  // Number of active UEs with downlink GBR traffic as defined in ETSI TS 136 314
  int32 numberOfActiveUeDlGbrCell = 16;
  // Number of active UEs with uplink GBR traffic as defined in ETSI TS 136 314
  int32 numberOfActiveUeUlGbrCell = 17;
  // Number of active UEs with downlink non-GBR traffic as defined in ETSI TS 136 314
  int32 numberOfActiveUeDlNongbrCell = 18;
  // Number of active UEs with uplink non-GBR traffic as defined in ETSI TS 136 314
  int32 numberOfActiveUeUlNongbrCell = 19;
  // Packet discard rate for downlink GBR traffic in percentage as defined in ETSI TS 136 314
  int32 dlGbrPdrCell = 20;
  // Packet discard rate for uplink GBR traffic in percentage as defined in ETSI TS 136 314
  int32 ulGbrPdrCell = 21;
  // Packet discard rate for downlink non-GBR traffic in percentage as defined in ETSI TS 136 314
  int32 dlNongbrPdrCell = 22;
  // Packet discard rate for uplink non-GBR traffic in percentage as defined in ETSI TS 136 314
  int32 ulNongbrPdrCell = 23;
  // Packet delay of downlink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlGbrDelayUe = 24;
  // Packet delay of uplink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulGbrDelayUe = 25;
  // Packet delay of downlink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlNongbrDelayUe = 26;
  // Packet delay of uplink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulNongbrDelayUe = 27;
  // Packet discard rate of downlink GBR traffic of a UE in percentage as defined in ETSI TS 136 314
  int32 dlGbrPdrUe = 28;
  // Packet discard rate of uplink GBR traffic of a UE in percentage as defined in ETSI TS 136 314
  int32 ulGbrPdrUe = 29;
  // Packet discard rate of downlink non-GBR traffic of a UE in percentage as defined in ETSI TS 136 314
  int32 dlNongbrPdrUe = 30;
  // Packet discard rate of uplink non-GBR traffic of a UE in percentage as defined in ETSI TS 136 314
  int32 ulNongbrPdrUe = 31;
  // Scheduled throughput of downlink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlGbrThroughputUe = 32;
  // Scheduled throughput of uplink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulGbrThroughputUe = 33;
  // Scheduled throughput of downlink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlNongbrThroughputUe = 34;
  // Scheduled throughput of uplink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulNongbrThroughputUe = 35;
  // Data volume of downlink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlGbrDataVolumeUe = 36;
  // Data volume of uplink GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulGbrDataVolumeUe = 37;
  // Data volume of downlink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 dlNongbrDataVolumeUe = 38;
  // Data volume of uplink non-GBR traffic of a UE as defined in ETSI TS 136 314
  int32 ulNongbrDataVolumeUe = 39;

}

message PlmnInfoGETRequest {
  // Comma separated list of Application instance identifiers
  repeated string appInsId = 1;

}

message PlmnInfoGETResponse {
  repeated PlmnInfo data = 1;
}

message RabInfoGETRequest {
  // Application instance identifier
  string appInsId = 1;
  // Comma separated list of E-UTRAN Cell Identities
  repeated string cellId = 2;
  // Comma separated list of IE IPv4 addresses as defined for the type for AssociateId
  repeated string ueIpv4Address = 3;
  // Comma separated list of IE IPv6 addresses as defined for the type for AssociateId
  repeated string ueIpv6Address = 4;
  // Comma separated list of IE NATed IP addresses as defined for the type for AssociateId
  repeated string natedIpAddress = 5;
  // Comma separated list of GTP TEID addresses as defined for the type for AssociateId
  repeated string gtpTeid = 6;
  // E-RAB identifier
  int32 erabId = 7;
  // QoS Class Identifier as defined in ETSI TS 123 401
  int32 qci = 8;
  // Maximum downlink E-RAB Bit Rate as defined in ETSI TS 123 401
  int32 erabMbrDl = 9;
  // Maximum uplink E-RAB Bit Rate as defined in ETSI TS 123 401
  int32 erabMbrUl = 10;
  // Guaranteed downlink E-RAB Bit Rate as defined in ETSI TS 123 401
  int32 erabGbrDl = 11;
  // Guaranteed uplink E-RAB Bit Rate as defined in ETSI TS 123 401
  int32 erabGbrUl = 12;

}

message S1BearerInfoGETRequest {
  // Comma separated list of temporary identifiers allocated for the specific UE as defined in   ETSI TS 136 413
  repeated string tempUeId = 1;
  // Comma separated list of IE IPv4 addresses as defined for the type for AssociateId
  repeated string ueIpv4Address = 2;
  // Comma separated list of IE IPv6 addresses as defined for the type for AssociateId
  repeated string ueIpv6Address = 3;
  // Comma separated list of IE NATed IP addresses as defined for the type for AssociateId
  repeated string natedIpAddress = 4;
  // Comma separated list of GTP TEID addresses as defined for the type for AssociateId
  repeated string gtpTeid = 5;
  // Comma separated list of E-UTRAN Cell Identities
  repeated string cellId = 6;
  // Comma separated list of E-RAB identifiers
  repeated int32 erabId = 7;

}

message SubscriptionLinkListSubscriptionsGETRequest {
  // Filter on a specific subscription type. Permitted values: cell_change, rab_est, rab_mod, rab_rel, meas_rep_ue, nr_meas_rep_ue, timing_advance_ue, ca_reconf, s1_bearer.
  string subscriptionType = 1;

}

message SubscriptionsDELETERequest {
  // Subscription Id, specifically the \"Self-referring URI\" returned in the subscription request
  string subscriptionId = 1;

}

message SubscriptionsGETRequest {
  // Subscription Id, specifically the \"Self-referring URI\" returned in the subscription request
  string subscriptionId = 1;

}

message SubscriptionsPOSTRequest {
  // Subscription to be created
  InlineSubscription inlineSubscription = 1;

}

message SubscriptionsPUTRequest {
  // Subscription Id, specifically the \"Self-referring URI\" returned in the subscription request
  string subscriptionId = 1;
  // Subscription to be modified
  InlineSubscription inlineSubscription = 2;

}

